{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentran/Desktop/React project/nasa-react-app/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main(props) {\n  _s();\n  const {\n    handleToogleModal\n  } = props;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function fetchAPIData() {\n      setLoading(true);\n      const NASA_KEY = process.env.REACT_APP_NASA_API_KEY;\n      const url = `https://api.nasa.gov/plantary/apod?api+key=${NASA_KEY}`;\n      const today = new Date().toDateString();\n      const localKey = `NASA-${today}`;\n      if (localStorage.getItem(localKey)) {\n        const apiData = JSON.parse(localStorage.getItem(localKey));\n        setData(apiData);\n        console.log('fetched from cache today');\n        setLoading(false);\n        return;\n      }\n      localStorage.clear();\n      try {\n        const res = await fetch(url);\n        const apiData = await res.json();\n        localStorage.setItem(localKey, JSON.stringify(apiData));\n        setData(apiData);\n        console.log('Fetched from API today');\n      } catch (err) {\n        console.log(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchAPIData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this) : data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.hdurl,\n        alt: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 6\n  }, this);\n}\n_s(Main, \"FdOwom6wr7+RSCoINDv1CzJyVbs=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Main","props","_s","handleToogleModal","data","setData","loading","setLoading","fetchAPIData","NASA_KEY","process","env","REACT_APP_NASA_API_KEY","url","today","Date","toDateString","localKey","localStorage","getItem","apiData","JSON","parse","console","log","clear","res","fetch","json","setItem","stringify","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","src","hdurl","alt","title","_c","$RefreshReg$"],"sources":["/Users/nguyentran/Desktop/React project/nasa-react-app/src/components/Main.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\n\nexport default  function Main(props){\n  const {handleToogleModal}=props;\n  const [data,setData]=useState(null)\n  const [loading,setLoading]=useState(false);\n useEffect(() => {\n   async function fetchAPIData(){\n    setLoading(true);\n    const NASA_KEY=process.env.REACT_APP_NASA_API_KEY\n    const url=`https://api.nasa.gov/plantary/apod?api+key=${NASA_KEY}`\n    const today= new Date().toDateString()\n    const localKey=`NASA-${today}`;\n    if(localStorage.getItem(localKey)){\n     const apiData=JSON.parse(localStorage.getItem(localKey));\n     setData(apiData);\n     console.log('fetched from cache today')\n     setLoading(false)\n     return;\n    }\n    localStorage.clear();\n    try{\n     const res=await fetch(url)\n     const  apiData=await res.json()\n     localStorage.setItem(localKey,JSON.stringify(apiData))\n     setData(apiData)\n     console.log('Fetched from API today')\n\n    }catch (err){\n     console.log(err.message)\n    }\n    finally {\n     setLoading(false)\n    }\n   }\n   fetchAPIData()\n }, []);\n return (\n     <div>\n      {loading?(\n          <div>\n           <p>loading</p>\n      </div>):(data &&(\n          <div>\n           <img\n               src={data.hdurl}\n               alt={data.title}\n           />\n          </div>\n      ))}\n     </div>\n )\n }\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAgB,SAASC,IAAIA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAClC,MAAM;IAACC;EAAiB,CAAC,GAACF,KAAK;EAC/B,MAAM,CAACG,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;EACnC,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAACV,QAAQ,CAAC,KAAK,CAAC;EAC3CD,SAAS,CAAC,MAAM;IACd,eAAeY,YAAYA,CAAA,EAAE;MAC5BD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,QAAQ,GAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB;MACjD,MAAMC,GAAG,GAAC,8CAA8CJ,QAAQ,EAAE;MAClE,MAAMK,KAAK,GAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;MACtC,MAAMC,QAAQ,GAAC,QAAQH,KAAK,EAAE;MAC9B,IAAGI,YAAY,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAC;QACjC,MAAMG,OAAO,GAACC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAC;QACxDZ,OAAO,CAACe,OAAO,CAAC;QAChBG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCjB,UAAU,CAAC,KAAK,CAAC;QACjB;MACD;MACAW,YAAY,CAACO,KAAK,CAAC,CAAC;MACpB,IAAG;QACF,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAACd,GAAG,CAAC;QAC1B,MAAOO,OAAO,GAAC,MAAMM,GAAG,CAACE,IAAI,CAAC,CAAC;QAC/BV,YAAY,CAACW,OAAO,CAACZ,QAAQ,EAACI,IAAI,CAACS,SAAS,CAACV,OAAO,CAAC,CAAC;QACtDf,OAAO,CAACe,OAAO,CAAC;QAChBG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAEtC,CAAC,QAAOO,GAAG,EAAC;QACXR,OAAO,CAACC,GAAG,CAACO,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SACO;QACPzB,UAAU,CAAC,KAAK,CAAC;MAClB;IACD;IACAC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIT,OAAA;IAAAkC,QAAA,EACE3B,OAAO,gBACJP,OAAA;MAAAkC,QAAA,eACClC,OAAA;QAAAkC,QAAA,EAAG;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,GAAGjC,IAAI,iBACTL,OAAA;MAAAkC,QAAA,eACClC,OAAA;QACIuC,GAAG,EAAElC,IAAI,CAACmC,KAAM;QAChBC,GAAG,EAAEpC,IAAI,CAACqC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnC,EAAA,CAlDuBF,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}